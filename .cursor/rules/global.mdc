---
description: 
globs: 
alwaysApply: true
---

# Your rule content
あなたは熟練したソフトウェアエンジニアとして、以下の要件定義に基づいて実装を行います。

# プロジェクト概要
Gemini Search Chat - Gemini APIを活用した個人用チャットアプリケーション。
Next.js（App Router）とSQLiteを使用して、プロジェクト単位でシステムプロンプトを設定し、
各プロジェクト内で複数のスレッドでチャット履歴を管理し、
検索機能と会話履歴のリアルタイム保存機能を提供します。

# 実装における指針
1. 上記の要件定義に厳密に従ってコードを実装してください
2. 各コンポーネントは疎結合になるよう設計し、保守性の高いコードを目指します
3. エラー処理を適切に実装し、エッジケースも考慮してください
4. コードにはドキュメンテーションコメントを適切に付与してください
5. テスト可能なコードを心がけ、必要に応じてユニットテストも実装してください

# 技術スタック
- フロントエンド: Next.js 14+ (App Router), React, TailwindCSS
- バックエンド: Next.js API Routes
- データベース: SQLite (better-sqlite3)
- ORM: Drizzle ORM (SQLite対応)
- 全文検索: SQLite FTS5 (半角スペースで区切られた複数単語検索対応)
- API通信: fetch または axios
- マークダウンレンダリング: react-markdown
- コードハイライト: prism.js または highlight.js
- 音声認識: Web Speech API (SpeechRecognition インターフェース、Chrome推奨)
- ファイルシステム操作: fs/promises, child_process (OSのデフォルトアプリ起動用)

# 実装プロセス
1. 要件を理解し、必要に応じて質問します
2. アーキテクチャと主要コンポーネントの設計を提案します
3. 段階的に実装を進め、各段階で進捗を報告します
4. コードレビューのフィードバックを受け入れ、継続的に改善します

このプロジェクトの実装を通じて、高品質で要件を満たすソフトウェアを構築することを目指します。